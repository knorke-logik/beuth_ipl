
#include <stm32f30x.h>
#include <stm32f30x_conf.h>
#include <stm32f30x_gpio.h>
#include <stm32f30x_dac.h>
#include <stm32f30x_flash.h>

//__attribute__((__section__(".user_data"))) const char userConfig[64];
// int Fanspeed __attribute__((at(0x08009C40))); // store
// #define EEPROM_START_ADDRESS  ((uint32_t)0x08002000) // 8K after sector 2
// #define PAGE_SIZE             ((uint32_t)0x0400)  /* Page size = 1KByte */
void readSample();

int main(void)bn
{

GPIO_InitTypeDef gpio_init;
DAC_InitTypeDef dac_init;
uint32_t addr = 0x08009C40;
uint16_t data = 0xAAAA;
//uint16_t read_data = 0;
FlagStatus flg_stat;
FLASH_Status flash_status;
uint32_t i = 1;
uint32_t msg = 0;

SystemInit();
RCC_APB1PeriphClockCmd(RCC_APB1Periph_DAC, ENABLE);
RCC_AHBPeriphClockCmd(RCC_AHBPeriph_GPIOA, ENABLE);
gpio_init.GPIO_Mode = GPIO_Mode_AN;
gpio_init.GPIO_Pin = GPIO_Pin_4;
GPIO_Init(GPIOA, &gpio_init);
DAC_StructInit(&dac_init);
DAC_Init(DAC1,DAC_Channel_1, &dac_init);
DAC_Cmd(DAC1,DAC_Channel_1, ENABLE);

//FLASH_Unlock();
////FLASH_ClearFlag();
//flash_status = FLASH_ErasePage(0x0800F230);
//if (flash_status == FLASH_COMPLETE) {
//	while (i == 1) {
//	flg_stat = FLASH_GetFlagStatus(FLASH_SR_BSY);
//		if (flg_stat == 0) {
//			flash_status = FLASH_ProgramHalfWord(addr,data);
//			i = 0;
//		}
//	}
//}
//
//flg_stat = FLASH_GetFlagStatus(FLASH_SR_BSY);
//	if (flg_stat == 0) {
//		read_data = *(__IO uint16_t*)addr;
//	}
//FLASH_Lock();

	FLASH_Unlock();
//	for (int cnt = 0; cnt < 12; cnt ++){
//		flash_status = FLASH_ErasePage(0x08009C40 + cnt*0x7D0);
//	}
	flg_stat = FLASH_GetFlagStatus(FLASH_SR_BSY);
	if (flash_status == FLASH_COMPLETE && FLASH_GetFlagStatus(FLASH_SR_BSY) == 0) {
//		for (i = 0; i < 0x8ff; i++)
//		{
//			data = (uint16_t)i;
//			FLASH_ProgramHalfWord(addr,data);
//			addr = addr+2;
//
//			//DAC_SetChannel1Data(DAC1,DAC_Align_12b_R, i);// 0x7FF); 868
//			//if (i == 0x8fe) i = 0;
//		}
//		for (i = 0x8fe; i > 0; i--)
//		{
//			data = (uint16_t)i;
//			FLASH_ProgramHalfWord(addr,data);
//			addr = addr+2;
//
//			//DAC_SetChannel1Data(DAC1,DAC_Align_12b_R, *(__IO uint16_t*)addr);// 0x7FF); 868
//			//if (i == 0x8fe) i = 0;
//		}
	}

	for (i = 0x08009C40; i < 0x800c03b; i = i+2){
		DAC_SetChannel1Data(DAC1,DAC_Align_12b_R, *(__IO uint16_t*)i);
		if (i == 0x800c03a) i = 0x08009C40;
	}
	FLASH_Lock();
}
